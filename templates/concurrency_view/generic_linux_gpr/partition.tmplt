@@-- The up to date list of tags available for this template is available here:
@@-- https://taste.tuxfamily.org/wiki/index.php?title=Kazoo_Templates_Documentation#templates.2Fconcurrency_view.2Fsub.2Fpartition.tmplt
@@-- If you are using vim, go over the URL and pres gx in to follow the link
@@-- If you have no internet access you can also use (with vim) Ctrl-W-f or gf in vim to open the text doc:
@@-- $HOME/tool-inst/share/kazoo/doc/templates_concurrency_view_sub_partition.ascii
--  Node name          : @_Name_@
--  Execution platform : @_CPU_Platform_@
--  This file is generated for MSP430 with FreeRTOS
@@-- Not all systems use Ada so we must not always include Ada dataview folder
@@TABLE@@
@@IF@@ ( @_LOWER:Block_Languages_@ = sdl and (@_LOWER:Block_Default_Codegen_@ = "ada" or @_LOWER:Block_Default_Codegen_@ = "")) or @_LOWER:Block_Languages_@ = ada
@@SET@@ Need_Ada = TRUE
@@END_IF@@
@@END_TABLE@@

project @_CAPITALIZE:Name_@ is

   type Build_Type is ("Debug", "Release");
   Build : Build_Type := external ("CFG", "Debug");

   --  following to be updated with all relevant source dirs
   for Source_Dirs use
      (
@@TABLE@@
@@IF@@ @_LOWER:Block_Languages_@ = sdl
       "../../@_LOWER:Block_Names_@/SDL/code",
       "../../@_LOWER:Block_Names_@/SDL/wrappers",
@@ELSE@@
       "../../@_LOWER:Block_Names_@/@_Block_Languages_@/src",
       "../../@_LOWER:Block_Names_@/@_Block_Languages_@/wrappers",
@@END_IF@@
@@--  CPP Instances: Add the folder of the parent function (in C++)
@@IF@@ @_EXIST:Block_Instance_Of_@ and @_Block_Languages_@ = CPP
       "../../@_LOWER:Block_Instance_Of_@/@_Block_Languages_@/src",
@@END_IF@@
@@END_TABLE@@
@@IF@@ @_VP_Name_@ = "" and (@_In_Port_Names'Length_@ > 0 or @_Out_Port_Names'Length_@ > 0)
@@-- Detect distributed systems (no virtual processor) - add DriversConfig folder
       "../DriversConfig",
@@END_IF@@
       "../../dataview/C",
@@IF@@ @_Need_Ada_@ = TRUE
       "../../dataview/Ada/asn1rtl",
       "../../dataview/Ada/src",
       "../../dataview/Ada/boards/x86",
@@END_IF@@
@@TABLE@@
       "@_LOWER:Name_@/drivers/@_Device_Driver_Names_@",
@@END_TABLE@@
       "../system_spec",
       "@_LOWER:Name_@/runtime",
       "@_LOWER:Name_@/runtime/Packetizer",
       "@_LOWER:Name_@/runtime/Broker",
       "@_LOWER:Name_@/runtime/RuntimeCommon",
       "@_LOWER:Name_@")
       & external_as_list("EXTERNAL_SOURCE_PATH", ":")
       & external_as_list("@_UPPER:Name_@_EXTERNAL_SOURCE_PATH", ":");

   for Object_Dir use "obj";
   for Exec_Dir   use "../../binaries";

@@IF@@ @_Need_Ada_@ = TRUE
   for Languages use ("C", "C++", "Ada");
@@ELSE@@
   for Languages use ("C", "C++");
@@END_IF@@

   for Main use ("main.cpp");

   package Naming is
       for Body_Suffix ("C++") use ".cpp";
       for Body_Suffix ("Ada") use ".adb";
   end Naming;

   package Compiler is
      for Driver ("C") use "gcc";
      for Driver ("C++") use "g++";

      for Required_Switches ("C") use ("-c");

      Common_C_Switches :=
         ("-pthread",
          "-I.",
@@IF@@ @_Coverage_@
          "-fprofile-arcs",
          "-ftest-coverage",
          "-DCOVERAGE",
@@END_IF@@
          "-ffunction-sections",
          "-Wall",
          "-Wextra",
          "-Wpedantic",
          "-Wno-unused-parameter");

      case Build is
         when "Release" =>
            for Default_Switches ("C") use
               ("-g",
                "-O2")
                & Common_C_Switches
                & external_as_list("@_UPPER:Name_@_USER_CFLAGS", " ")
                & external_as_list("USER_CFLAGS", " ");
            for Default_Switches ("C++") use
               ("-std=c++17",
                "-g",
                "-O2")
                & Common_C_Switches
                & external_as_list("@_UPPER:Name_@_USER_CFLAGS", " ")
                & external_as_list("USER_CFLAGS", " ");
            for Default_Switches ("Ada") use
               ("-Wall",
                "-Wextra",
                "-gnatd.E");
         when "Debug" =>
            for Default_Switches ("C") use
               ("-O0",
                "-g")
                & Common_C_Switches
                & ("-fstack-usage", "-fstack-check", "-fsanitize=address", "-fcommon")
                & external_as_list("@_UPPER:Name_@_USER_CFLAGS", " ")
                & external_as_list("USER_CFLAGS", " ");
            for Default_Switches ("C++") use
               ("-std=c++17",
                "-O0",
                "-g")
                & Common_C_Switches
                & ("-fstack-usage", "-fstack-check", "-fsanitize=address", "-fcommon")
                & external_as_list("@_UPPER:Name_@_USER_CFLAGS", " ")
                & external_as_list("USER_CFLAGS", " ");
            for Default_Switches ("Ada") use
               ("-Wall",
                "-Wextra",
                "-gnatd.E")
                & ("-fstack-usage", "-fstack-check");
      end case;
   end Compiler;

   package Linker is

      Common_LD_Switches := 
         ("-I.",
          "-pthread",
          "-lrt",
          "-lgnat",
          "-Wall",
          "-Wextra",
          "-Wpedantic",
          "-Wno-unused-parameter",
@@IF@@ @_Coverage_@
          "-fprofile-arcs",
          "-ftest-coverage",
          "-lgcov",
@@END_IF@@
          "-Wl,-Map=main.map",
          "-Wl,--gc-sections")
          & external_as_list("@_UPPER:Name_@_USER_LDFLAGS", " ")
          & external_as_list("USER_LDFLAGS", " ");

      case Build is
          when "Release" =>
            for Default_Switches ("C")   use Common_LD_Switches;
            for Default_Switches ("C++") use Common_LD_Switches;
         when "Debug" =>
            for Default_Switches ("C")   use Common_LD_Switches
                 & ("-g", "-fcommon", "-fstack-check", "-fsanitize=address");
            for Default_Switches ("C++") use Common_LD_Switches
                 & ("-g", "-fcommon", "-fstack-check", "-fsanitize=address");
      end case;

   end Linker;

   package Builder is
      for Executable ("main.cpp") use "@_Name_@";
   end Builder;

end @_CAPITALIZE:Name_@;
