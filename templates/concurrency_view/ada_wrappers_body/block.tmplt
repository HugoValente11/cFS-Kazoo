@@-- The following tags are available in this template:
@@--
@@-- @_Name_@             : Protected block name
@@-- @_Language_@         : Implementation language
@@-- @_Calling_Threads_@  : List of calling threads
@@-- @_Node name_@        : Node name
@@-- @_Protected_PIs_@    : Protected Provided interfaces (from pi.tmplt)
@@-- @_Unprotected_PIs_@  : Unprotected Provided interfaces (from pi.tmplt)
@@-- @_Required_@         : Required interfaces (from ri.tmplt)
--  The package body comes templates/concurrency_view/ada_wrappers_body/block.tmplt
package body @_CAPITALIZE:Name_@ is

   --  Initialization function is implemented in C (in vm_if.c)
   procedure Init is
      procedure C_Init
         with Import, Convention => C, Link_Name => "init_@_LOWER:Name_@";
   begin
      C_Init;
   end Init;    

@@IF@@ @_Protected_PIs_@ /= ""
   --  Protected provided interfaces (incl. Sporadic and cyclics)
   --  from templates/concurrency_view/ada_wrappers_body/pi.tmplt)
   protected body @_CAPITALIZE:Name_@_Protected is
      @_Protected_PIs'Indent_@
   end @_CAPITALIZE:Name_@_Protected;
@@END_IF@@
   
   --  Unprotected provided interfaces
   --  from templates/concurrency_view/ada_wrappers_body/pi.tmplt
   @_Unprotected_PIs'Indent_@
   --  End if unprotected interfaces

@@IF@@ @_Required_@ /= ""
   --  Required interfaces (templates/concurrency_view/ada_wrappers_body/ri.tmplt)
   @_Required'Indent_@
@@END_IF@@

@@IF@@ @_Language_@ = SDL and not @_Is_Type_@
  procedure @_CAPITALIZE:Name_@_Check_Queue (Pending_Message : out Boolean) is
  begin
     -- Check all incoming queues for a pending message
     Pending_Message := False;
   @@TABLE@@
   @@IF@@ @_ASync_PI_Kind_@ = SPORADIC_OPERATION and @_ASync_PI_Is_Connected_@
     if Get_Count (
       Entity => @_CAPITALIZE:Partition_Name_@_@_CAPITALIZE:Name_@_@_CAPITALIZE:List_Of_ASync_PIs_@_K,
       Port   =>  @_CAPITALIZE:Name_@_@_CAPITALIZE:List_Of_ASync_PIs_@_Thread_@_CAPITALIZE:Name_@_@_CAPITALIZE:List_Of_ASync_PIs_@_others_Port_Type'(INPORT_@_CAPITALIZE:List_Of_ASync_PIs_@)) > 0
   then
      Pending_Message := True;
      return;
   end if;
   @@END_IF@@
   @@END_TABLE@@ 
  end @_CAPITALIZE:Name_@_Check_Queue;

@@END_IF@@
end @_CAPITALIZE:Name_@;
