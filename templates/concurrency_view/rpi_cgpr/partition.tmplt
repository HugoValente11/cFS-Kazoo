@@-- The following tags are available in this template:
@@--
@@-- @_Name_@            : Partition name (usually the name of the binary)
@@-- @_Threads_@         : Code generated for the threads
@@-- @_Thread_Names_@    : Tag: list of thread names
@@-- @_Node_Name_@       : Name of the node containing this partition
@@-- @_Blocks_@          : Code generated for protected functions
@@-- @_Block_Names@      : Vector Tag: list of block (user functions) names
@@-- @_Block_Languages@  :   |_ Corresponding implementation language
@@-- @_Coverage_@        : True if user requested code coverage enable
@@-- @_Package_Name_@    : AADL Package name for the target (e.g. ocarina_porocessors_x86)
@@-- @_CPU_Name_@        : CPU Name (e.g. x86_linux)
@@-- @_CPU_Platform_@    : AADL CPU_Platform (e.g. PLATFORM_NATIVE)
@@-- @_CPU_Classifier_@  : AADL CPU Classifier (e.g. ocarina_processors_x86::x86.linux)
@@-- @_CPU_Family_@      : e.g. gr740 or x86
@@-- @_CPU_Instance_@    : e.g. rtems51_posix or linux
@@-- @_VP_Name_@         : Virtual processor name on which the partition is bounded
@@-- @_VP_Platform_@     : Virtual processor platform (e.g. PLATFORM_AIR)
@@-- @_VP_Classifier_@   : Virtual processor classifier
@@-- @_Ada_Runtime_@     : Set if CPU_Platform = PLATFORM_GNAT_RUNTIME
@@-- @_Bound_Functions_@ : List of user functions from Interface view
@@-- @_Thread_Src_Name_@ : Vector tag : connection thread name (source)
@@-- @_Thread_Dst_Name_@ : Vector tag : connection thread name (dest)
@@-- @_Thread_Src_Port_@ : Vector tag : connection port name (source)
@@-- @_Thread_Dst_Port_@ : Vector tag : connection port name (dest)
@@-- @_In_Port_Names_@        : Vector tag: input ports of the partition
@@-- @_In_Port_Thread_Name_@  :     |_ corresponding thread inside the partition
@@-- @_In_Port_Type_Name_@    :     |_ corresponding parameter type name (optional)
@@-- @_Out_Port_Names_@       : Vector tag: output ports of the partition
@@-- @_Out_Port_Thread_Name_@ :     |_ corresponding thread inside the partition
@@-- @_Out_Port_Type_Name_@   :     |_ corresponding parameter type name (optional)
--  Node name          : @_Name_@
--  Execution platform : @_CPU_Platform_@
-- Generic gprbuild configuration file for rtems5 with Ada support for leon3
configuration project Raspberry_PI is

   for Target use "arm-linux-gnueabihf";
   for Canonical_Target use "arm-linux-gnueabihf";
   for Inherit_Source_Path ("C++") use ("C");
   for Inherit_Source_Path ("Asm_Cpp") use ("Asm");
   for Default_Language use "Ada";
   for Object_Lister use ("arm-linux-gnueabihf-nm", "-g");
   for Object_Lister_Matcher use " [TDRBSG] (.*)";
   for Archive_Builder  use ("arm-linux-gnueabihf-ar", "cr");
   for Archive_Builder_Append_Option use ("q");
   for Archive_Indexer  use ("arm-linux-gnueabihf-ranlib");
   for Archive_Suffix   use ".a";
   for Symbolic_Link_Supported use "true";
   for Library_Major_Minor_Id_Supported use "true";
   for Library_Builder  use "/usr/lib/gprbuild/gprlib";
   for Library_Support  use "full";
   for Shared_Library_Prefix use "lib";
   for Shared_Library_Minimum_Switches use ("-shared");
   for Library_Version_Switches use ("-Wl,-soname,");

   for Shared_Library_Suffix use ".so";
   for Library_Auto_Init_Supported use "true";
   for Run_Path_Option  use ("-Wl,-z,origin,-rpath,");
   for Run_Path_Origin use "$ORIGIN";
   for Library_Encapsulated_Options use ("-shared", "-static-libgcc");
   for Library_Partial_Linker use
         ("/usr/bin/arm-linux-gnueabihf-gnatgcc", "-nostdlib", "-Wl,-r", "-o");
   for Default_Language use "C";

   package Compiler is
      for Driver ("C") use "arm-linux-gnueabihf-gcc";
      for Driver ("Ada") use "arm-linux-gnueabihf-gcc";
      for Driver ("C++") use "arm-linux-gnueabihf-g++";

      for Leading_Required_Switches ("C") use ("-c", "-x", "c");
      for Leading_Required_Switches ("C++") use ("-c", "-x", "c++");
      for Required_Switches("Ada") use ("-c", "-x", "ada");

      Common_C_Switches := 
         ("-pipe",
          "-fdata-sections",
          "-ffunction-sections",
          "-fPIC");

      for Required_Switches("C") use Common_C_Switches;
      for Required_Switches("C++") use Common_C_Switches;
        
      for Object_File_Suffix ("C") use ".o";
      for Object_File_Suffix ("C++") use ".o";
      for Object_File_Suffix ("Ada") use ".o";
      for Dependency_Switches ("C") use   ("-MMD", "-MF", "");
      for Dependency_Switches ("C++") use ("-MMD", "-MF", "");
      for Dependency_Switches ("Ada") use ("-MMD", "-MF", "");
      for Include_Switches ("C") use ("-I");
      for Include_Switches ("C++") use ("-I");
      for Include_Switches ("Ada") use ("-I");
      for Include_Path ("Ada") use "ADA_INCLUDE_PATH";
      for Include_Path_File ("Ada") use "ADA_PRJ_INCLUDE_FILE";
      
   end Compiler;

   package Naming is
      for Spec_Suffix ("C") use ".h";
      for Body_Suffix ("C") use ".c";
 
      for Spec_Suffix ("Ada") use ".ads";
      for Body_Suffix ("Ada") use ".adb";

      for Spec_Suffix ("C") use ".h";
      for Body_Suffix ("C++") use ".cc";

      for Dot_Replacement use "-";
   end Naming;

   package Linker is
       for Driver use "arm-linux-gnueabihf-gcc";
       Common_C_Linker_Switches :=
           ("-pipe",
            "-g",
            "-lm");
       for Export_File_Switch use "-Wl,--version-script=";
       for Map_File_Option    use "-Wl,-Map,";
       for Default_Switches ("C") use Common_C_Linker_Switches;
       for Default_Switches ("C++") use Common_C_Linker_Switches & ("-lstdc++");
       for Default_Switches ("Ada") use ("-pipe", "-g", "-lm", "-lgnat");
   end Linker;

   package Clean is
      for Source_Artifact_Extensions ("Ada") use (".dg", ".rep");
      for Object_Artifact_Extensions ("Ada") use (".s", ".ci", ".gcno", ".su");

      for Source_Artifact_Extensions ("C") use (".gli");
      for Object_Artifact_Extensions ("C") use (".s", ".ci", ".gcno", ".su");

      for Source_Artifact_Extensions ("C++") use (".gli");
      for Object_Artifact_Extensions ("C++") use (".s", ".ci", ".gcno", ".su");
   end Clean;
end Raspberry_PI;
