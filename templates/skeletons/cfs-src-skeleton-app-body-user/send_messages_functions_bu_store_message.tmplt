@@-- The following tags are available in this template:
@@--
@@-- @_Name_@                : The name of the interface
@@-- @_Direction_@           : "PI" or "RI"
@@-- @_Kind_@                : The RCM Kind
@@-- @_Parent_Function_@     : The name of the function
@@-- @_Language_@            : The implementation language of the function
@@-- @_Property_Names_@      : All AADL properties (names) associated to the function
@@-- @_Property_Values_@     : ... and corresponding values
@@-- @_Param_Names_@         : List of parameter names
@@-- @_Param_Types_@         :   |_ Corresponding parameter types
@@-- @_Param_Directions_@    :   |_ Corresponding direction
@@-- @_Param_Encodings_@     :   |_ Corresponding ASN.1 encoding
@@-- @_Is_Timer_@            : Flag set to true if this is a timer interface
@@-- @_Period_@, @_WCET_@, @_Queue_Size_@ : Properties of the interface
@@-- @_IF_Property_Names_@, _Values_@ : User-defined properties (vector tag)
@@-- The following tags are available in this template:
@@--
@@-- @_Name_@                : The name of the interface
@@-- @_Direction_@           : "PI" or "RI"
@@-- @_Kind_@                : The RCM Kind
@@-- @_Parent_Function_@     : The name of the function
@@-- @_Param_Names_@         : List of parameter names
@@-- @_Param_Types_@         :   |_ Corresponding parameter types
@@-- @_Param_Directions_@    :   |_ Corresponding direction
@@-- @_Param_Encodings_@     :   |_ Corresponding ASN.1 encoding
@@-- @_Period_@, @_WCET_@, @_Queue_Size_@ : Properties of the interface
@@-- @_IF_Property_Names_@, _Values_@ : User-defined properties (vector tag)@@-- 
@@-- @_Event_Name_@, @_Event_Info_@, @_Event_Type_@, @_Event_ID_@
@@-- @_Message_Content_@, @_Message_ID_@, @_Message_Size_@, @_Store_Message_@
@@IF@@ @_Direction_@ = "PI" and @_Kind_@ = MESSAGE_OPERATION
void @_UPPER:Parent_Function_@_User_Send_@_Name_@() {
    // TODO Build structs here
    @@TABLE@@
    // @_UPPER:Parent_Function_@_Data.OUT_@_Param_Names_@;
    @@END_TABLE@@

}

@@ELSIF@@ @_Kind_@ = MESSAGE_OPERATION
void @_UPPER:Parent_Function_@_User_Receive_@_Name_@() {
        // CFE_ES_WriteToSysLog("[@_UPPER:Parent_Function_@] Message received: %s", @_UPPER:Parent_Function_@_Data.IN_@_Param_Names_@);                            

        @@IF@@ @_Store_Message_@ = "YES"
        // Store message
        char CDSname[] = "@_UPPER:Parent_Function_@_CDS";
        @_UPPER:Parent_Function_@_Data.MAX_STORE_LENGTH = sizeof(c);

        // Create datastore
        status = CFE_ES_RegisterCDS(&@_UPPER:Parent_Function_@_Data.CDSHandlePtr,
                                            @_UPPER:Parent_Function_@_Data.MAX_STORE_LENGTH,
                                            CDSname);

        if (status == CFE_SUCCESS) {
        CFE_ES_WriteToSysLog("[@_UPPER:Parent_Function_@] Successfully created datastore");

            // Copy to datastore
            status = CFE_ES_CopyToCDS(@_UPPER:Parent_Function_@_Data.CDSHandlePtr, c);

            if (status == CFE_SUCCESS) {
            CFE_ES_WriteToSysLog("[@_UPPER:Parent_Function_@] Successfully copied to datastore.");

            // Send event notification Successfully stored
            status = CFE_EVS_SendEvent(@_UPPER:Parent_Function_@_STARTUP_INF_EID, CFE_EVS_EventType_INFORMATION, "[@_UPPER:Parent_Function_@] Message stored successfully"); 

            }
        } 
        @@END_IF@@


    }
}

@@END_IF@@
